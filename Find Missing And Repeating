


class Solve {
    int[] findTwoElement(int arr[], int n) {
        int a=0,b=0;
        
        for(int i=0;i<n;i++){
            // repeating element
            if(arr[Math.abs(arr[i])-1] < 0){             // negative number
                a = Math.abs(arr[i]);                    // repeated element
            }
            else{                                        // negativepositive number
                arr[Math.abs(arr[i])-1] = -(arr[Math.abs(arr[i])-1]);    // making that element negative
            }
        }
        
        for(int i=0;i<n;i++){
            if(arr[i] > 0){
                b = i+1;                // as the index start from 0 and the value will be at next position
            }
        }
        
        int[] array = new int[2];
        array[0] = a;
        array[1] = b;
        return array;
    }
}


// firstly check for repeating number 
// if array of array i,e, {2,4,1,2,5}
// arr[Math.abs(arr[i])-1] = arr[Math.abs(2)-1] = arr[2-1] = arr[1];
// therefore the value which is at index of element of array, will be clecked if it is visited before 
// if yes, make the arr[i] negative
// else, return it as it is definately repeated
// 
// missing smallest positive element
// since all elements which were present in array are now negative
// so if we iterate through the array and found and element not negative its index+1 
// ( index start with 0 ) will be min positive number 



time : O(n)

space : O(1)


//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



class Solve {
    int[] findTwoElement(int arr[], int n) {
        HashMap<Integer,Integer> map = new HashMap<> ();
        int[] array = new int[2];
        
        for(int i=0;i<n;i++){
            if(arr[i]<0){       //positive
                if(map.containsKey(arr[i])){
                    map.put(i, map.get(arr[i])+1);     // store in map and get the freq
                }
                else{
                    map.put(i, 1);      // index and 1
                }
            }
        }
        for(int i=0;i<n;i++){
            if(map.get(arr[i]) > 1){
                array[0] = arr[i];
            }
            
            if(map.get(arr[i]) == 1){
                array[1] = arr[i];
            }
        }
        return array;
    }
}

