
https://www.youtube.com/watch?v=1BcB0jNgKYE


class GfG
{
    int max_sum(int arr[], int n){
    	int sum = 0;
        int cursum = 0;
        int res =0;
        for(int i=0; i<n; i++){
            sum += arr[i];             // sum of elements
            cursum += arr[i] * i;      // sum of array element * index
        }
        res = cursum;
        
        for(int i=1; i<n; i++){
            
            int nextsum = cursum - (sum-arr[i-1]) + (arr[i-1] * (n-1));
            cursum = nextsum;
            res = Math.max(res, cursum);
        }
        return res;
    }	
}


// A[] = {8,3,1,2} 

// sum = 8+3+1+2 = 14
// cursum = 8*0 + 3*1 + 1*2 + 2*3 = 11
// res = 11

// nextsum = 11 - (14-8) + (8*3) = 29
// cursum = nextsum = 29
// res = max(11,29)
// return res


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\


class GfG
{
    int max_sum(int arr[], int n)
    {
    	int max = 0;
       int sum = 0;
       for (int i = 0; i < arr.length; i++) {

           sum = sum + (arr[i] * i);
       }
       if (max < sum) {
           max = sum;
       }
       for (int i = 0 ; i< arr.length-1;i++){
            sum = 0;
           rotate(arr);
           for (int j = 0; j< arr.length; j++) {
               sum = sum + (arr[j] * j);
           }
           if (max < sum) {
               max = sum;
           }
       }

       return max;
    }	
    static void rotate(int [] arr){
       int last = arr[arr.length - 1];
       for (int i = arr.length - 1; i > 0; i--) {
           arr[i] = arr[i - 1];
       }
       arr[0] = last;
   }
}


