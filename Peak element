

class Solution{
	public int peakElement(int[] arr,int n){
       if(n==1){
           return 0;
       }
       if(n==2){
           return (arr[0]>arr[1] ? 0:1);
       }
       if(arr[0] > arr[1]){
           return 0;
       }
       else if(arr[n-1] > arr[n-2]){
           return n-1;
       }
       else{
           for(int i=1;i<n-1;i++){
               if(arr[i] > arr[i+1] && arr[i] > arr[i-1]){
                   return i;
               }
           }
       }
       return -1;
    }
}


///////////////////////////////////////////////////////////////////////////////////


class Solution
{
	// Function to find the peak element
	// arr[]: input array
	// n: size of array a[]
	public int peakElement(int[] arr,int n)
    {
       int low = 0;
       int high = n-1;
       
       while(low<=high){
            int mid = (low+high)/2;
            
            if( (mid==0 || arr[mid] >= arr[mid-1] )
                && (mid==n-1 || arr[mid] >= arr[mid+1]) ){
                return mid;
            }
            else if(arr[mid] <= arr[mid+1]){
                low = mid + 1;
            }
            else{
                high = mid - 1;
            }
        }
        return -1;
    }
}

