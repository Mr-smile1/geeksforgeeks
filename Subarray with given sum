

class Solution
{
    //Function to find a continuous sub-array which adds up to a given number.
    static ArrayList<Integer> subarraySum(int[] arr, int n, int s) 
    {
       int i,j,count,flag=0;
       ArrayList<Integer>list=new ArrayList<Integer>();
       for(i=0;i<n;i++){
           count =arr[i];
           for(j=i+1;j<=n;j++){          
               if(count==s){                         // if count is equal to given number
                   flag++;
                   if(flag==1){
                       list.add(i+1);                // i+1 as index is zero
                       list.add(j);
                   }
               }
               if(count > s||n == j){                // if count > given number or the end of array is reached
                   break;
               }
               count = count+arr[j];                 // basically added the elements till jth element in whole iteration
           }  
       }
       if(list.isEmpty()){                           // if(still flag is not equal to zero)
            list.add(-1);                            // it means no sucha array is possible which make given sum (s)
        }
       return list;                                  // else return list
   }    
}

